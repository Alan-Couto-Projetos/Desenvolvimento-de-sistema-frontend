// Importações necessárias
var app = require('../app');
var debug = require('debug')('hotwheels-api:server');
var http = require('http');

// Função para normalizar a porta
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

// Obter porta do ambiente e definir no Express
var port = normalizePort(process.env.PORT || '5000');
app.set('port', port);

// Criar servidor HTTP
var server = http.createServer(app);

// Lidar com erros do servidor
server.on('error', onError);

// Ouvir na porta fornecida
server.listen(port);

// Event listener para o evento "listening" do servidor HTTP
server.on('listening', onListening);

// Função para tratar erros de inicialização do servidor
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Função para lidar com o evento "listening" do servidor HTTP
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);

  console.log('Server is listening on port ' + addr.port); // Adicionando console.log
}